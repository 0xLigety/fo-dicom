<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml" #>
<#@ output extension=".cs" #>
// Copyright (c) 2012-2015 fo-dicom contributors.
// Licensed under the Microsoft Public License (MS-PL).

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Dicom
{
    public partial class DicomUID
    {
        private static void LoadInternalUIDs()
        {
<#
    var uids = GetUids();

    foreach (var kv in uids)
    {
        var uid = kv.Value;
        var keyword = ToUidKeyword(uid.Item2) + (uid.Item4 ? "RETIRED" : "");
#>
            _uids.Add(DicomUID.<#= keyword #>.UID, DicomUID.<#= keyword #>);
<#
    }
#>
        }

<#
    foreach (var kv in uids)
    {
        var uid = kv.Value;
        var keyword = ToUidKeyword(uid.Item2) + (uid.Item4 ? "RETIRED" : "");
        var description = ToUidDescription(uid.Item2);
        var type = ToDicomUidTypeString(uid.Item3);
#>
        ///<summary><#= uid.Item3 #>: <#= description #></summary>
        public readonly static DicomUID <#= keyword #> = new DicomUID("<#= uid.Item1 #>", "<#= description #>", DicomUidType.<#= type #>, <#= uid.Item4.ToString().ToLower() #>);

<#
    }
#>
    }
}
<#@ include file="T4/dictionarymethods.t4" #>
